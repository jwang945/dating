{"version":3,"sources":["components/topNavBar.jsx","components/bottomNavBar.jsx","components/navBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["TopNavBar","state","className","href","type","id","Component","BottomNavBar","style","marginTop","NavBar","Fragment","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAkDeA,E,4MAhDbC,MAAQ,G,4CACR,WACE,OACE,qBACEC,UAAU,wDACV,aAAW,kBAFb,SAIE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,8BAGA,wBACED,UAAU,8BACVE,KAAK,SACLC,GAAG,qBACH,aAAW,oBAJb,SAME,sBAAMH,UAAU,0BAGlB,qBACEA,UAAU,qCACVG,GAAG,wBAFL,SAIE,qBAAIH,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,yBAIF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,6BAIF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,qC,GArCQG,aC0CTC,E,4MAzCbN,MAAQ,G,4CACR,WACE,OACE,qBAAKO,MAAO,CAAEC,UAAW,IAAMP,UAAU,iCAAzC,SACE,sBAAKA,UAAU,oBAAoB,aAAW,uBAA9C,UACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,uBAGA,oBAAGD,UAAU,WAAWC,KAAK,IAA7B,oBAEE,sBAAMD,UAAU,0DAAhB,mBAIF,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,qBAGA,mBAAGD,UAAU,WAAWC,KAAK,IAA7B,yBAGA,mBAAGD,UAAU,WAAWC,KAAK,IAA7B,kBAGA,mBAAGD,UAAU,WAAWC,KAAK,IAA7B,kBAGA,mBAAGD,UAAU,WAAWC,KAAK,IAA7B,kBAGA,mBAAGD,UAAU,WAAWC,KAAK,IAA7B,kBAGA,mBAAGD,UAAU,WAAWC,KAAK,IAA7B,2B,GAjCiBG,aCcZI,E,4MAXbT,MAAQ,G,4CACR,WACE,OACE,eAAC,IAAMU,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GANaL,aCONM,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCOSW,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e40f4f38.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nclass TopNavBar extends Component {\n  state = {};\n  render() {\n    return (\n      <nav\n        className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\"\n        aria-label=\"Main navigation\"\n      >\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">\n            Offcanvas navbar\n          </a>\n          <button\n            className=\"navbar-toggler p-0 border-0\"\n            type=\"button\"\n            id=\"navbarSideCollapse\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div\n            className=\"navbar-collapse offcanvas-collapse\"\n            id=\"navbarsExampleDefault\"\n          >\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                  Dashboard\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Notifications\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Profile\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default TopNavBar;\n","import React, { Component } from \"react\";\nclass BottomNavBar extends Component {\n  state = {};\n  render() {\n    return (\n      <div style={{ marginTop: 56 }} className=\"nav-scroller bg-body shadow-sm\">\n        <nav className=\"nav nav-underline\" aria-label=\"Secondary navigation\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n            Dashboard\n          </a>\n          <a className=\"nav-link\" href=\"#\">\n            Friends\n            <span className=\"badge bg-light text-dark rounded-pill align-text-bottom\">\n              27\n            </span>\n          </a>\n          <a className=\"nav-link\" href=\"#\">\n            Explore\n          </a>\n          <a className=\"nav-link\" href=\"#\">\n            Suggestions\n          </a>\n          <a className=\"nav-link\" href=\"#\">\n            Link\n          </a>\n          <a className=\"nav-link\" href=\"#\">\n            Link\n          </a>\n          <a className=\"nav-link\" href=\"#\">\n            Link\n          </a>\n          <a className=\"nav-link\" href=\"#\">\n            Link\n          </a>\n          <a className=\"nav-link\" href=\"#\">\n            Link\n          </a>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default BottomNavBar;\n","import React, { Component } from \"react\";\nimport TopNavBar from \"./topNavBar\";\nimport BottomNavBar from \"./bottomNavBar\";\nclass NavBar extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <TopNavBar />\n        <BottomNavBar />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NavBar;\n","import \"./App.css\";\nimport NavBar from \"./components/navBar\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}